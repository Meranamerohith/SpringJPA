package com.sathya.orm.ProductClient;


import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import com.sathya.orm.entity.Product;
import com.sathya.orm.mapper.ProductMapper;
import com.sathya.orm.model.ProductDetails;
import com.sathya.orm.productrespository.ProductRepository;
@Component
public class ProductClient implements CommandLineRunner{
	
	@Autowired
	ProductRepository productRepository;
	
	
	@Autowired
	ProductMapper mapper;

	@Override
	public void run(String... args) throws Exception {
		
		
		//model class data : having the values
		
		ProductDetails productDetails = new ProductDetails();
		productDetails.setProId(1001);
		productDetails.setProName("Chinthapandu");
		productDetails.setProPrice(220);
		
		
		//conversion of model class data to entity
		
		Product product = mapper.modeltoEntityConversion(productDetails);
		
		
	    productRepository.save(product);
	    
	    
	    //Add list of products
	    
	    
	    ProductDetails p1 = new ProductDetails();
	    p1.setProId(111);
	    p1.setProName("Sugar");
	    p1.setProPrice(20);
	    
	    
	    ProductDetails p2 = new ProductDetails();
	    p2.setProId(222);
	    p2.setProName("salt");
	    p2.setProPrice(120);
	    
	    List<ProductDetails> proDetails = List.of(p1,p2);
	    
	    List<Product> products = mapper.modeltoEntityListConversion(proDetails);
	    
	    productRepository.saveAll(products);
	    
	    System.out.println(productRepository.count());;
	    
	   List<Product> productDtls =   productRepository.findAll();
	   
	   for(Product productDtl: productDtls) {
		   System.out.println(productDtl);
	   }
	   
	 
	  System.out.println(productRepository.existsById(111));
	   
	   Optional<Product> p = productRepository.findById(111);
	   if(p!=null) {
		   System.out.println("Your product exists ,your product data:"+p);
	   }
	   else {
		   System.out.println("Your product do not exists");
	   }
	   
	        productRepository.deleteById(111);
	    
		    productRepository.deleteAll();
		   
		    //productRepository.delete(product);
	   
	}

}
